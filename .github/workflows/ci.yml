name: CI

env:
  GH_TOKEN: ${{ github.token }}

on:
  push:
    branches: ['*']
    tags: ['*']
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun run test

  build:
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build app
        run: bun run build:prod

      - name: Build Electron for ${{ matrix.os }}
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            bunx electron-builder build --publish=never --linux
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            bunx electron-builder build --publish=never --win
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            bunx electron-builder build --publish=never --mac
          fi

      - name: Upload Linux files
        uses: actions/upload-artifact@v4
        with:
          name: opencode-ui-linux
          path: |
            release/*.AppImage
            release/*.deb
            release/*.rpm
        if: matrix.os == 'ubuntu-latest'

      - name: Upload MacOS file
        uses: actions/upload-artifact@v4
        with:
          name: opencode-ui-mac
          path: release/*.dmg
        if: matrix.os == 'macos-latest'

      - name: Upload Windows file
        uses: actions/upload-artifact@v4
        with:
          name: opencode-ui-windows
          path: release/*.exe
        if: matrix.os == 'windows-latest'

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Linux files
        uses: actions/download-artifact@v4
        with:
          name: opencode-ui-linux
          path: artifacts/linux

      - name: Download MacOS files
        uses: actions/download-artifact@v4
        with:
          name: opencode-ui-mac
          path: artifacts/mac

      - name: Download Windows files
        uses: actions/download-artifact@v4
        with:
          name: opencode-ui-windows
          path: artifacts/windows

      - name: create release
        run: gh release create ${{ github.ref_name }} --generate-notes

      - name: upload linux files to release
        run: gh release upload ${{ github.ref_name }} artifacts/linux/*.AppImage artifacts/linux/*.deb artifacts/linux/*.rpm

      - name: upload mac file to release
        run: gh release upload ${{ github.ref_name }} artifacts/mac/*.dmg

      - name: upload windows file to release
        run: gh release upload ${{ github.ref_name }} artifacts/windows/*.exe
